{"version":3,"sources":["../../src/game_manager/Spawner.js"],"names":["getRandomBonusValues","bonusValues","Math","floor","random","length","Spawner","config","spawnLocations","addObject","deleteObject","moveObjects","id","spawnInterval","limit","objectType","spawnerType","objectsCreated","start","num","interval","setInterval","spawnObject","SpawnerType","MONSTER","moveMonsters","CHEST","spawnChest","spawnMonster","ITEM","spawnItem","location","pickRandomLocation","randomItem","itemData","items","item","ItemModel","name","frame","push","chest","ChestModel","monsterNum","attack","health","mVelocity","Movement","monster","MonsterModel","Intervals","ResetLocation","who","invalidLocation","some","obj","x","y","filter","moveMonsterInterval","forEach","move"],"mappings":"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","sourcesContent":["import {\n  SpawnerType,\n  randomNumber,\n  Intervals,\n  Movement,\n} from './utils';\nimport ChestModel from '../models/ChestModel';\nimport MonsterModel from '../models/MonsterModel';\nimport ItemModel from '../models/ItemModel';\nimport * as itemData from '../../public/assets/level/tools.json';\n\nfunction getRandomBonusValues() {\n  // fibonacci sequence\n  const bonusValues = [-5, -3, -2, -1, -1, 0, 0, 0, 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55];\n  return bonusValues[Math.floor(Math.random() * bonusValues.length)];\n}\nexport default class Spawner {\n  constructor(config, spawnLocations, addObject, deleteObject, moveObjects) {\n    this.id = config.id;\n    this.spawnInterval = config.spawnInterval;\n    this.limit = config.limit;\n    this.objectType = config.spawnerType;\n    this.spawnLocations = spawnLocations;\n    this.addObject = addObject;\n    this.deleteObject = deleteObject;\n    this.objectsCreated = [];\n    this.start();\n    this.moveObjects = moveObjects;\n    this.num = 0;\n  }\n\n  start() {\n    this.interval = setInterval(() => {\n      if (this.objectsCreated.length < this.limit) {\n        this.spawnObject();\n      }\n    }, this.spawnInterval);\n    if (this.objectType === SpawnerType.MONSTER) {\n      this.moveMonsters();\n    }\n  }\n\n  spawnObject() {\n    if (this.objectType === SpawnerType.CHEST) {\n      // console.log('chest spawning');\n      this.spawnChest();\n    } else if (this.objectType === SpawnerType.MONSTER) {\n      // console.log('monsters spawning');\n      this.spawnMonster();\n    } else if (this.objectType === SpawnerType.ITEM) {\n      this.spawnItem();\n    }\n  }\n\n  spawnItem() {\n    const location = this.pickRandomLocation('item', 1);\n    const randomItem = itemData.items[Math.floor(Math.random() * itemData.items.length)];\n    const item = new ItemModel(\n      location[0],\n      location[1],\n      // 300,\n      // 300,\n      this.id,\n      randomItem.name,\n      randomItem.frame,\n      getRandomBonusValues(),\n      getRandomBonusValues(),\n      getRandomBonusValues(),\n    );\n    this.objectsCreated.push(item);\n    // console.log(item);\n    this.addObject(item.id, item);\n  }\n\n  spawnChest() {\n    const location = this.pickRandomLocation('chest', 1);\n    const chest = new ChestModel(location[0], location[1], randomNumber(1, 21), this.id);\n    this.objectsCreated.push(chest);\n    this.addObject(chest.id, chest);\n  }\n\n  spawnMonster() {\n    const monsterNum = randomNumber(0, 20);\n    const attack = (monsterNum + 1) * 2;\n    const health = (monsterNum + 1) * 4;\n    const mVelocity = Movement.MONSTER;\n    const location = this.pickRandomLocation('monster', 1);\n    const monster = new MonsterModel(\n      location[0],\n      location[1],\n      randomNumber(21, 21 + attack + health), // coins drop more powerful more likely to drop coins\n      this.id,\n      monsterNum,\n      health,\n      attack,\n      mVelocity,\n      Intervals.Movement.MONSTER,\n      Intervals.ResetLocation.MONSTER,\n    );\n    this.objectsCreated.push(monster);\n    this.addObject(monster.id, monster);\n  }\n\n  // num is used to help limit how many times it looks for a valid location\n  pickRandomLocation(who, num) {\n    if (who === 'item') {\n      this.num += 1;\n      // console.log(this.num);\n    }\n    // console.log(`${who}, ${this.spawnLocations}`);\n    // console.log(this.spawnLocations);\n    const location = this.spawnLocations[Math.floor(Math.random() * this.spawnLocations.length)];\n    // some used in an interesting way here\n    const invalidLocation = this.objectsCreated.some((obj) => {\n      if (obj.x === location[0] && obj.y === location[1]) {\n        return true;\n      }\n      return false;\n    });\n    if (invalidLocation && num < 10) {\n      // console.log(`location from ${who} with num: ${num}`);\n      return this.pickRandomLocation(who, num + 1);\n    }\n    return location;\n  }\n\n  removeObject(id) {\n    // filter will return the objects inside our current array that meets\n    // the true value that we specified in the call back\n    // we want to get back the id's minus the one we passed in\n    this.objectsCreated = this.objectsCreated.filter((obj) => obj.id !== id);\n    this.deleteObject(id);\n  }\n\n  moveMonsters() {\n    this.moveMonsterInterval = setInterval(() => {\n      this.objectsCreated.forEach((monster) => {\n        monster.move();\n      });\n      this.moveObjects();\n    }, Intervals.Movement.MONSTER);\n  }\n}\n"],"file":"Spawner.js"}