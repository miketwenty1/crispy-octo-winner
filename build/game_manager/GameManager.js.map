{"version":3,"sources":["../../src/game_manager/GameManager.js"],"names":["GameManager","io","spawners","chests","items","monsters","players","playerLocations","chestLocations","monsterLocations","itemLocations","itemData","locations","monsterCount","parseMapData","setupEventListeners","setupSpawners","levelData","layers","forEach","layer","name","objects","obj","push","x","Scale","FACTOR","y","properties","value","on","socket","console","log","id","reason","emit","token","frame","decoded","jwt","verify","process","env","JWT_SECRET","JSON","stringify","username","user","spawnPlayer","broadcast","err","message","playerData","checkSocket","flipX","playerAttacking","weaponDirection","email","ChatModel","create","itemId","canPickupItem","addItem","spawnerId","removeObject","chestId","bitcoin","updateBitcoin","health","maxHealth","updateHealth","monsterId","reduceAmount","parseInt","respawn","attack","playerAttackValue","loseHealth","playerAttacked","attackedPlayerId","to","config","spawnInterval","Intervals","DEFAULT","limit","spawnerType","spawner","Object","keys","key","SpawnerType","CHEST","Spawner","addChest","bind","deleteChest","MONSTER","addMonster","deleteMonster","moveMonsters","ITEM","deleteItem","playerId","player","PlayerModel","chest","item","monster"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\nimport PlayerModel from '../models/PlayerModel';\nimport * as levelData from '../../public/assets/level/large_level.json';\nimport Spawner from './Spawner';\nimport ChatModel from '../models/ChatModel';\nimport * as itemData from '../../public/assets/level/tools.json';\n\nimport {\n  SpawnerType, Scale, Intervals,\n} from './utils';\n// in charge of managing game state for player's game\nexport default class GameManager {\n  constructor(io) {\n    this.io = io;\n    this.spawners = {};\n    this.chests = {};\n    this.items = {};\n    this.monsters = {};\n    this.players = {};\n\n    this.playerLocations = [];\n    this.chestLocations = {};\n    this.monsterLocations = {};\n    this.itemLocations = itemData.locations;\n\n    this.monsterCount = 0;\n  }\n\n  setup() {\n    this.parseMapData();\n    this.setupEventListeners();\n    this.setupSpawners();\n  }\n\n  parseMapData() {\n    this.levelData = levelData;\n    this.levelData.layers.forEach((layer) => {\n      if (layer.name === 'player_locations') {\n        layer.objects.forEach((obj) => {\n          this.playerLocations.push([obj.x * Scale.FACTOR, obj.y * Scale.FACTOR]);\n        });\n      } else if (layer.name === 'monster_locations') {\n        layer.objects.forEach((obj) => {\n          if (this.monsterLocations[obj.properties[0].value]) {\n            this.monsterLocations[obj.properties[0].value].push([obj.x * Scale.FACTOR, obj.y * Scale.FACTOR]);\n          } else {\n            this.monsterLocations[obj.properties[0].value] = [[obj.x * Scale.FACTOR, obj.y * Scale.FACTOR]];\n          }\n        });\n      } else if (layer.name === 'chest_locations') {\n        layer.objects.forEach((obj) => {\n          if (this.chestLocations[obj.properties[0].value]) {\n            this.chestLocations[obj.properties[0].value].push([obj.x * Scale.FACTOR, obj.y * Scale.FACTOR]);\n          } else {\n            this.chestLocations[obj.properties[0].value] = [[obj.x * Scale.FACTOR, obj.y * Scale.FACTOR]];\n          }\n        });\n      }\n    });\n  }\n\n  setupEventListeners() {\n    this.io.on('connection', (socket) => {\n      // when a player connects\n      console.log('player connected to our game');\n      console.log(socket.id);\n      socket.on('disconnect', (reason) => {\n        // delete userdata from server\n        delete this.players[socket.id];\n        // emit message to remove this player\n        this.io.emit('playerDisconnect', socket.id);\n        // when a player disconnects\n        console.log(`player disconnected from game because: ${reason}`);\n        console.log(socket.id);\n      });\n\n      socket.on('newPlayer', (token, frame) => {\n        try {\n          // validate token\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\n          // make sure socket isn't being reused\n          // console.log(this.players);\n          // console.log(socket.id);\n          // console.log(!(socket.id in this.players));\n          if (!(socket.id in this.players)) {\n            // get players name\n            console.log(`new player, with decoded value of ${JSON.stringify(decoded)}`);\n            console.log(`this is the frame going to the server from newPlayer on socket ${frame}`);\n            const { username } = decoded.user;\n            this.spawnPlayer(socket.id, username, frame);\n\n            // send players to new player\n            socket.emit('currentPlayers', this.players);\n            // send monsters to new player\n            socket.emit('currentMonsters', this.monsters);\n            // send chests to new player\n            socket.emit('currentChests', this.chests);\n            // send item objects to new players\n            socket.emit('currentItems', this.items);\n            // send new player to all players\n            socket.broadcast.emit('spawnPlayer', this.players[socket.id]);\n            // console.log('spawning player');\n            // console.log(this.players[socket.id]);\n          }\n        } catch (err) {\n          // reject login\n          console.log(`err with validating jwt token ${err.message}`);\n          socket.emit('invalidToken');\n        }\n      });\n      socket.on('playerMovement', (playerData) => {\n        if (!this.players[socket.id]) {\n          console.log('somehow playerMovement we got an undefined player');\n          this.checkSocket(socket);\n        } else if (this.players[socket.id]) {\n          this.players[socket.id].x = playerData.x;\n          this.players[socket.id].y = playerData.y;\n          this.players[socket.id].flipX = playerData.flipX;\n          this.players[socket.id].playerAttacking = playerData.playerAttacking;\n          this.players[socket.id].weaponDirection = playerData.weaponDirection;\n          // console.log(`yeah ${playerData.weaponDirection.angle}`);\n          // emit message to all players letting them know about the updated position\n          this.io.emit('playerMoved', this.players[socket.id]);\n        }\n      });\n      socket.on('sendMessage', async (message, token) => {\n        if (!this.players[socket.id]) {\n          console.log('somehow sendMessage we got an undefined player');\n          this.checkSocket(socket);\n        } else {\n          try {\n            const decoded = jwt.verify(token, process.env.JWT_SECRET);\n            const { username, email } = decoded.user;\n\n            await ChatModel.create({ email, message });\n            // console.log(username, message);\n            this.io.emit('newMessage', {\n              username,\n              message,\n              frame: this.players[socket.id].frame,\n            });\n          } catch (err) {\n            console.log(`err with validating jwt token ${err.message}`);\n            socket.emit('invalidToken');\n          }\n        }\n      });\n\n      socket.on('pickUpItem', (itemId) => {\n        if (!this.players[socket.id]) {\n          console.log('somehow pickUpChest we got an undefined player');\n          this.checkSocket(socket);\n        } else if (this.items[itemId]) {\n          // check to see if player is elgible to pickup item\n          if (this.players[socket.id].canPickupItem()) {\n            this.players[socket.id].addItem(this.items[itemId]);\n            socket.emit('updateItems', this.players[socket.id]);\n            socket.broadcast.emit('updatePlayersItems', socket.id, this.players[socket.id]);\n            // remove items\n            this.spawners[this.items[itemId].spawnerId].removeObject(itemId);\n          }\n        }\n      });\n      socket.on('pickUpChest', (chestId) => {\n        if (!this.players[socket.id]) {\n          console.log('somehow pickUpChest we got an undefined player');\n          this.checkSocket(socket);\n        } else if (this.chests[chestId]) {\n          // short hand for setting bitcoin variable from chests[chestId].bitcoin this is probably a bad idea.. just trying to learn javascript and see if this works.\n          const { bitcoin } = this.chests[chestId];\n\n          // updating player balance\n          this.players[socket.id].updateBitcoin(bitcoin);\n          socket.emit('updateBalance', this.players[socket.id].bitcoin);\n\n          // remove chest this somehow calls deleteChest event (need to verify this).\n          this.spawners[this.chests[chestId].spawnerId].removeObject(chestId);\n        }\n      });\n\n      socket.on('healPlayer', () => {\n        if (!this.players[socket.id]) {\n          console.log('somehow healPlayer we got an undefined player');\n          this.checkSocket(socket);\n        } else if (this.players[socket.id].health < this.players[socket.id].maxHealth) {\n          this.players[socket.id].updateHealth(-1);\n          this.io.emit('updatePlayerHealth', socket.id, this.players[socket.id].health);\n        }\n      });\n      socket.on('monsterOverlap', (monsterId) => {\n        if (!this.players[socket.id]) {\n          console.log('somehow monsterOverlap we got an undefined player');\n          this.checkSocket(socket);\n        } else if (this.monsters[monsterId]) {\n          this.players[socket.id].updateHealth(1);\n          this.io.emit('updatePlayerHealth', socket.id, this.players[socket.id].health);\n\n          if (this.players[socket.id].health <= 0) {\n            // update balance to take a 50% penalty\n            // 10 represents the \"radix\" i believe this should be 10 for base 10 numbering\n            const reduceAmount = parseInt(-this.players[socket.id].bitcoin / 2, 10);\n            // console.log(reduceAmount);\n            this.players[socket.id].updateBitcoin(reduceAmount);\n            socket.emit('updateBalance', this.players[socket.id].bitcoin);\n            // respawn\n            this.players[socket.id].respawn(this.players);\n            this.io.emit('respawnPlayer', this.players[socket.id]);\n          }\n        }\n      });\n\n      socket.on('monsterAttacked', (monsterId) => {\n        // update spawner\n        // console.log('debug: '+ Object.keys(this.players[playerId]));\n        // console.log('playerid: '+playerId);\n        if (!this.players[socket.id]) {\n          console.log('somehow monsterAttacked we got an undefined player');\n          this.checkSocket(socket);\n        } else if (this.monsters[monsterId]) {\n          const { bitcoin, attack } = this.monsters[monsterId];\n          const playerAttackValue = this.players[socket.id].attack;\n          this.monsters[monsterId].loseHealth(playerAttackValue);\n          // console.log('health' + this.monsters[monsterId].health);\n          // check health remove monster if dead\n          if (this.monsters[monsterId].health <= 0) {\n            this.players[socket.id].updateBitcoin(bitcoin);\n            socket.emit('updateBalance', this.players[socket.id].bitcoin);\n            // console.log('health2' + this.monsters[monsterId].health);\n            this.spawners[this.monsters[monsterId].spawnerId].removeObject(monsterId);\n            this.io.emit('monsterRemoved', monsterId);\n            // give player some more health if they kill a monster\n            this.players[socket.id].updateHealth(-10);\n            this.io.emit('updatePlayerHealth', socket.id, this.players[socket.id].health);\n          } else {\n            this.players[socket.id].playerAttacked(attack);\n            // update player health\n            this.io.emit('updatePlayerHealth', socket.id, this.players[socket.id].health);\n            // update monster health\n            this.io.emit('updateMonsterHealth', monsterId, this.monsters[monsterId].health);\n\n            // respawn player if he be ded\n            if (this.players[socket.id].health <= 0) {\n              // update balance to take a 50% penalty\n              // 10 represents the \"radix\" i believe this should be 10 for base 10 numbering\n              const reduceAmount = parseInt(-this.players[socket.id].bitcoin / 2, 10);\n              // console.log(reduceAmount);\n              this.players[socket.id].updateBitcoin(reduceAmount);\n              socket.emit('updateBalance', this.players[socket.id].bitcoin);\n              // respawn\n              this.players[socket.id].respawn(this.players);\n              this.io.emit('respawnPlayer', this.players[socket.id]);\n            }\n          }\n        }\n      });\n      socket.on('attackedPlayer', (attackedPlayerId) => {\n        if (!this.players[socket.id]) {\n          console.log('somehow attackedPlayer we got an undefined player');\n          this.checkSocket(socket);\n        } else if (this.players[attackedPlayerId]) {\n          // get balance\n          const { bitcoin } = this.players[attackedPlayerId];\n          const playerAttackValue = this.players[socket.id].attack;\n          // subtract health\n          this.players[attackedPlayerId].playerAttacked(playerAttackValue);\n          // check health of attacked player if dead send gold to attacker\n          if (this.players[attackedPlayerId].health <= 0) {\n            // dead player loses half of the gold to attacker\n            this.players[socket.id].updateBitcoin(bitcoin);\n            // respawn attacked player\n            this.players[attackedPlayerId].respawn(this.players);\n            this.io.emit('respawnPlayer', this.players[attackedPlayerId]);\n            // send update balance message to player\n            socket.emit('updateBalance', this.players[socket.id].bitcoin);\n            // reset dead players gold\n            this.players[attackedPlayerId].updateBitcoin(-bitcoin);\n            // io.to sends to a specific socket\n            this.io.to(`${attackedPlayerId}`).emit('updateBalance', this.players[attackedPlayerId].bitcoin);\n            // add bonus health to player\n            this.players[socket.id].updateHealth(-20);\n            this.io.emit('updatePlayerHealth', socket.id, this.players[socket.id].health);\n          } else {\n            this.io.emit('updatePlayerHealth', attackedPlayerId, this.players[attackedPlayerId].health);\n          }\n        }\n      });\n      console.log('new player connected', socket.id);\n    });\n  }\n\n  setupSpawners() {\n    const config = {\n      spawnInterval: Intervals.DEFAULT,\n      limit: 3,\n      spawnerType: '',\n      id: '',\n    };\n    let spawner;\n    Object.keys(this.chestLocations).forEach((key) => {\n      config.id = `chest-${key}`;\n      config.spawnerType = SpawnerType.CHEST;\n      spawner = new Spawner(\n        config,\n        this.chestLocations[key],\n        this.addChest.bind(this),\n        this.deleteChest.bind(this),\n      );\n      this.spawners[spawner.id] = spawner;\n    });\n\n    Object.keys(this.monsterLocations).forEach((key) => {\n      config.id = `monster-${key}`;\n      config.spawnerType = SpawnerType.MONSTER;\n      spawner = new Spawner(\n        config,\n        this.monsterLocations[key],\n        this.addMonster.bind(this),\n        this.deleteMonster.bind(this),\n        this.moveMonsters.bind(this),\n      );\n      this.spawners[spawner.id] = spawner;\n    });\n    // create item spawner\n    config.id = 'item';\n    config.spawnerType = SpawnerType.ITEM;\n    config.limit = 1;\n    spawner = new Spawner(\n      config,\n      this.itemLocations,\n      this.addItem.bind(this),\n      this.deleteItem.bind(this),\n    );\n    this.spawners[spawner.id] = spawner;\n  }\n\n  spawnPlayer(playerId, username, frame) {\n    const player = new PlayerModel(playerId, this.playerLocations, this.players, username, frame);\n    this.players[playerId] = player;\n  }\n\n  addChest(chestId, chest) {\n    this.chests[chestId] = chest;\n    this.io.emit('chestSpawned', chest);\n  }\n\n  deleteChest(chestId) {\n    delete this.chests[chestId];\n    this.io.emit('chestRemoved', chestId);\n  }\n\n  addItem(itemId, item) {\n    this.items[itemId] = item;\n    this.io.emit('itemSpawned', item);\n  }\n\n  deleteItem(itemId) {\n    delete this.items[itemId];\n    this.io.emit('itemRemoved', itemId);\n  }\n\n  addMonster(monsterId, monster) {\n    this.monsters[monsterId] = monster;\n    this.io.emit('monsterSpawned', monster);\n  }\n\n  deleteMonster(monsterId) {\n    delete this.monsters[monsterId];\n    this.io.emit('monsterRemoved', monsterId);\n  }\n\n  moveMonsters() {\n    this.io.emit('monsterMovement', this.monsters);\n  }\n\n  checkSocket(socket) {\n    if (!this.players[socket.id]) {\n      this.io.emit('playerDisconnect', socket.id);\n      console.log('err with validating jwt token during checkSocket()');\n      socket.emit('invalidToken');\n    }\n  }\n}\n"],"file":"GameManager.js"}